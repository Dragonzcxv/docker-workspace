version: '3'

networks:
  projects:

services:
  nginx:
    depends_on:
      - php-8.2
      - php-8.0
      - php-7.4
      - php-7.3
    build:
      context: images/nginx/1.22
      dockerfile: Dockerfile
      args:
        TZ: ${WORKSPACE_TIMEZONE}
    container_name: nginx
    working_dir: /www/projects
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./projects:/www/projects
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx/
    networks:
      projects:
        # Можно добавить домены проектов, чтобы они были доступны из php контейнеров
        # aliases:
        #   - project.localhost

  php-8.2:
    build:
      context: images/php/8.2
      dockerfile: Dockerfile
      args:
        TZ: ${WORKSPACE_TIMEZONE}
        USER_UID: ${USER_UID}
        USER_GID: ${USER_GID}
    working_dir: /www/projects
    container_name: php-8.2
    volumes:
      - ./projects:/www/projects
    ports:
      - "${PHP_8_2_PORT}:9000"
    networks:
      - projects

  chromedriver:
    container_name: chromedriver
    image: selenium/standalone-chrome
    ports:
      - ${CHROMEDRIVER_PORT}:4444
    networks:
      - projects

  php-8.0:
    build:
      context: images/php/8.0
      dockerfile: Dockerfile
      args:
        TZ: ${WORKSPACE_TIMEZONE}
        USER_UID: ${USER_UID}
        USER_GID: ${USER_GID}
    working_dir: /www/projects
    container_name: php-8.0
    volumes:
      - ./projects:/www/projects
    ports:
      - "${PHP_8_0_PORT}:9000"
    networks:
      - projects

  php-7.4:
    build:
      context: images/php/7.4
      dockerfile: Dockerfile
      args:
        USER_UID: ${USER_UID}
        USER_GID: ${USER_GID}
        TZ: ${WORKSPACE_TIMEZONE}
    working_dir: /www/projects
    container_name: php-7.4
    volumes:
      - ./projects:/www/projects
    ports:
      - "${PHP_7_4_PORT}:9000"
    networks:
      - projects

  php-7.3:
    build:
      context: images/php/7.3
      dockerfile: Dockerfile
      args:
        USER_UID: ${USER_UID}
        USER_GID: ${USER_GID}
        TZ: ${WORKSPACE_TIMEZONE}
    working_dir: /www/projects
    container_name: php-7.3
    volumes:
      - ./projects:/www/projects
    ports:
      - "${PHP_7_3_PORT}:9000"
    networks:
      - projects

  mysql-8:
    build:
      context: images/mysql/8.0
      dockerfile: Dockerfile
      args:
        TZ: ${WORKSPACE_TIMEZONE}
    container_name: mysql-8
    volumes:
      - ./mysql/8.0/conf.d:/etc/mysql/conf.d
      - ./mysql/8.0/logs:/var/log/mysql/
      - ./mysql/8.0/dump:/dump
    ports:
      - "${MYSQL_8_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_8_ROOT_PASSWORD}
      MYSQL_TCP_PORT: ${MYSQL_8_TCP_PORT}
    networks:
      - projects

  mysql-5.7:
    build:
      context: images/mysql/5.7
      dockerfile: Dockerfile
      args:
        TZ: ${WORKSPACE_TIMEZONE}
    container_name: mysql-5.7
    volumes:
      - ./mysql/5.7/conf.d:/etc/mysql/conf.d
      - ./mysql/5.7/logs:/var/log/mysql/
      - ./mysql/5.7/dump:/dump
    ports:
      - "${MYSQL_5_7_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_5_7_ROOT_PASSWORD}
      MYSQL_TCP_PORT: ${MYSQL_5_7_TCP_PORT}
    networks:
      - projects

  mariadb-10.3: 
    build:
      context: images/mariadb/10.3
      dockerfile: Dockerfile
      args:
        TZ: ${WORKSPACE_TIMEZONE}
    container_name: mariadb-10.3
    volumes:
      - ./mariadb/10.3/dump:/dump
    ports:
      - "${MARIADB_13_0_PORT}:3306"
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_13_0_ROOT_PASSWORD}
    networks:
      - projects

  node-18:
    build:
      context: images/node/18
      dockerfile: Dockerfile
      args:
        USER_UID: ${USER_UID}
        USER_GID: ${USER_GID}
        TZ: ${WORKSPACE_TIMEZONE}
    working_dir: /www/projects
    stdin_open: true
    tty: true
    container_name: node-18
    volumes:
      - ./projects:/www/projects
    ports:
      - "${NODE_18_PORT}:8080"
    networks:
      - projects

  node-20:
    build:
      context: images/node/20
      dockerfile: Dockerfile
      args:
        USER_UID: ${USER_UID}
        USER_GID: ${USER_GID}
        TZ: ${WORKSPACE_TIMEZONE}
    working_dir: /www/projects
    stdin_open: true
    tty: true
    container_name: node-20
    volumes:
      - ./projects:/www/projects
    ports:
      - "${NODE_20_PORT}:8080"
    networks:
      - projects
